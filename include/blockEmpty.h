/*****************************************************************************************

Forever War - a NetHack-like FPS

Copyright (C) 2008 Thomas Sch√∂ps

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software Foundation;
either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this program;
if not, see <http://www.gnu.org/licenses/>.

*****************************************************************************************/

#ifndef _BLOCK_EMPTY_H_
#define _BLOCK_EMPTY_H_

#include "OgrePrerequisites.h"
#include "OgreVector3.h"
using namespace Ogre;
#include "block.h"
#include "blockConstants.h"

/// Replaces a VoxelBlockLoaded if the block is completely empty - in this case, neither voxel data nor texture data needs to be stored. Is generated by VoxelVolume::checkBlock
class VoxelBlockEmpty : public VoxelBlock
{
public:
	/// Texture number which will be returned for every position
	float texture;

	/// Contructor
	VoxelBlockEmpty(int blockX, int blockY, int blockZ, VoxelVolume* volume, VoxelBlockPersistent* persistent, float texture);
	~VoxelBlockEmpty();

	virtual int typeID() {return 1;}

	// Voxel editing functions
	virtual void fill(char value);

	virtual char getVoxelAt(int xPosition, int yPosition, int zPosition);
	virtual void setVoxelAt(int xPosition, int yPosition, int zPosition, const char value);

	virtual unsigned char getTextureAt(int xPosition, int yPosition, int zPosition);
	virtual void setTextureAt(int xPosition, int yPosition, int zPosition, const unsigned char value);
};

#endif
